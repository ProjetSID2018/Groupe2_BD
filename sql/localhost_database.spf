<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE plist PUBLIC "-//Apple//DTD PLIST 1.0//EN" "http://www.apple.com/DTDs/PropertyList-1.0.dtd">
<plist version="1.0">
<dict>
	<key>ContentFilters</key>
	<dict/>
	<key>auto_connect</key>
	<true/>
	<key>data</key>
	<data>
	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
	ShisiJDiQi79mWCMS/f9nZEPMq0BXw==
	</data>
	<key>encrypted</key>
	<true/>
	<key>format</key>
	<string>connection</string>
	<key>queryFavorites</key>
	<array/>
	<key>queryHistory</key>
	<array>
		<string>DROP PROCEDURE IF EXISTS PPOSITION_WORD;
CREATE PROCEDURE PPOSITION_WORD (IN VPOSITION INT, IN VTITLE BOOLEAN, IN VID_WORD INT, VID_ENTITY INT, IN VID_POS_TAG INT, IN VID_ARTICLE INT,IN VID_SYNONYM INT,IN VID_WIKI INT)   

BEGIN

     INSERT INTO POSITION_WORD (ID_POSITION, POSITION,TITLE,ID_WORD,ID_ENTITY,ID_POS_TAG,ID_ARTICLE,ID_SYNONYM,ID_WIKI) 
     VALUES (NULL, VPOSITION,VTITLE,VID_WORD,VID_ENTITY,VID_POS_TAG,VID_ARTICLE,VID_SYNONYM,VID_WIKI);

END;
CALL PPOSITION_WORD(18,TRUE,1,1,1,2,1,1)</string>
		<string>DROP PROCEDURE IF EXISTS PPOSITION_WORD;
CREATE PROCEDURE PPOSITION_WORD (IN VPOSITION INT, IN VTITLE BOOLEAN, IN VID_WORD INT, VID_ENTITY INT, IN VID_POS_TAG INT, IN VID_ARTICLE INT,IN VID_SYNONYM INT,IN VID_WIKI INT)   

BEGIN

     INSERT INTO POSITION_WORD (ID_POSITION, POSITION,TITLE,ID_WORD,ID_ENTITY,ID_POS_TAG,ID_ARTICLE,ID_SYNONYM,ID_WIKI) 
     VALUES (NULL, VPOSITION,VTITLE,VID_WORD,VID_ENTITY,VID_POS_TAG,VID_ARTICLE,VID_SYNONYM,VID_WIKI);

END;
CALL PPOSITION_WORD(18,TRUE,1,1,2,2,1,1)</string>
		<string>DROP PROCEDURE IF EXISTS PPOSITION_WORD;
CREATE PROCEDURE PPOSITION_WORD (IN VPOSITION INT, IN VTITLE BOOLEAN, IN VID_WORD INT, VID_ENTITY INT, IN VID_POS_TAG INT, IN VID_ARTICLE INT,IN VID_SYNONYM INT,IN VID_WIKI INT)   

BEGIN

     INSERT INTO POSITION_WORD (ID_POSITION, POSITION,TITLE,ID_WORD,ID_ENTITY,ID_POS_TAG,ID_ARTICLE,ID_SYNONYM,ID_WIKI) 
     VALUES (NULL, VPOSITION,VTITLE,VID_WORD,VID_ENTITY,VID_POS_TAG,VID_ARTICLE,VID_SYNONYM,VID_WIKI);

END;
CALL PPOSITION_WORD(2,TRUE,1,1,1,1,1,1)</string>
		<string>DROP PROCEDURE IF EXISTS PPOSITION_WORD;
CREATE PROCEDURE PPOSITION_WORD (IN VPOSITION INT, IN VTITLE BOOLEAN, IN VID_WORD INT, VID_ENTITY INT, IN VID_POS_TAG INT, IN VID_ARTICLE INT,IN VID_SYNONYM INT,IN VID_WIKI INT)   

BEGIN

     INSERT INTO POSITION_WORD (ID_POSITION, POSITION,TITLE,ID_WORD,ID_ENTITY,ID_POS_TAG,ID_ARTICLE,ID_SYNONYM,ID_WIKI) 
     VALUES (NULL, VPOSITION,VTITLE,VID_WORD,VID_ENTITY,VID_POS_TAG,VID_ARTICLE,VID_SYNONYM,VID_WIKI);

END;
CALL PPOSITION_WORD(1,TRUE,1,1,1,1,1,1)</string>
		<string>DROP PROCEDURE IF EXISTS PARTICLE;
CREATE PROCEDURE PARTICLE (IN VDATE_PUBLICATION DATE, IN VRATE_POSITIVITY FLOAT, IN VRATE_NEGATIVITY FLOAT,
    IN VRATE_JOY FLOAT, IN VRATE_FEAR FLOAT, IN VRATE_SADNESS FLOAT, IN VRATE_ANGRY FLOAT,
    IN VRATE_SURPRISE FLOAT, IN VRATE_DISGUST FLOAT, IN VID_NEWSPAPER INT, OUT VID_ARTICLE INT)

BEGIN

    INSERT INTO ARTICLE (id_article, date_publication, rate_positivity, rate_negativity, rate_joy, rate_fear, rate_sadness, rate_angry, rate_surprise, rate_disgust, id_newspaper) 
	VALUES (NULL,VDATE_PUBLICATION,VRATE_POSITIVITY,VRATE_NEGATIVITY,VRATE_JOY,VRATE_FEAR,
     VRATE_SADNESS,VRATE_ANGRY,VRATE_SURPRISE,VRATE_DISGUST,VID_NEWSPAPER);
    SELECT LAST_INSERT_ID() INTO VID_ARTICLE;

END;
CALL PARTICLE("2017-12-31",0.10,0.11,0.12,0.13,0.14,0.15,0.16,0.17,1,@VID_ARTICLE);
SELECT @VID_ARTICLE</string>
		<string>DROP PROCEDURE IF EXISTS PREALIZE;
CREATE PROCEDURE PREALIZE (IN VID_AUTOR INT, IN VID_ARTICLE INT)   
BEGIN
	 
     INSERT INTO REALIZE VALUES (VID_AUTOR ,VID_ARTICLE);

END;
CALL PREALIZE(1,1)</string>
		<string>DROP PROCEDURE IF EXISTS PREALIZE;
CREATE PROCEDURE PWRITE (IN VID_AUTOR INT, IN VID_ARTICLE INT)   
BEGIN
	 
     INSERT INTO REALIZE VALUES (VID_AUTOR ,VID_ARTICLE);

END;
CALL PREALIZE(1,1)</string>
		<string>DROP PROCEDURE IF EXISTS PWORD;
CREATE PROCEDURE PWORD (IN VWORD VARCHAR(50), IN VLEMMA VARCHAR(50), OUT VID_WORD INT)   



BEGIN
DECLARE VID_LEMMA INT DEFAULT 0;


    INSERT INTO LEMMA VALUES (NULL,VLEMMA);  

    SELECT LAST_INSERT_ID() INTO VID_LEMMA;

    INSERT INTO WORD VALUES (NULL,VWORD, VID_LEMMA);

    SELECT LAST_INSERT_ID() INTO VID_WORD;

END;
CALL PWORD("VBA", "PYTHON", @ID_WORD);
CALL PWORD("PHP", "JAVA", @ID_WORD);
SELECT @ID_WORD</string>
		<string>DROP PROCEDURE IF EXISTS PWIKI;
CREATE PROCEDURE PWIKI (IN VFILE_WIKI TEXT, OUT VID_WIKI INT)   
BEGIN
     INSERT INTO WIKI (ID_WIKI, FILE_WIKI) VALUES (NULL, FILE_WIKI);
     SELECT LAST_INSERT_ID() INTO VID_WIKI;
END;
CALL PWIKI("wikipedia.org", @VID_WIKI);
SELECT @VID_WIKI</string>
		<string>DROP PROCEDURE IF EXISTS PWIKI;
CREATE PROCEDURE PWIKI (IN VFILE_WIKI VARCHAR(2803), OUT VID_WIKI INT)   
BEGIN
     INSERT INTO WIKI (ID_WIKI, FILE_WIKI) VALUES (NULL, FILE_WIKI);
     SELECT LAST_INSERT_ID() INTO VID_WIKI;
END;
CALL PWIKI("wikipedia.org", @VID_WIKI);
SELECT @VID_WIKI</string>
		<string>DROP PROCEDURE IF EXISTS PWIKI;
CREATE PROCEDURE PWIKI (IN VFILE_WIKI VARCHAR(50), OUT VID_WIKI INT)   
BEGIN
     INSERT INTO WIKI (ID_WIKI, FILE_WIKI) VALUES (NULL, FILE_WIKI);
     SELECT LAST_INSERT_ID() INTO VID_WIKI;
END;
CALL PWIKI("wikipedia.org", @VID_WIKI);
SELECT @VID_WIKI</string>
		<string>DROP PROCEDURE IF EXISTS PSYNONYM;
CREATE PROCEDURE PSYNONYM (IN VSYNONYM VARCHAR(50))   
BEGIN
     INSERT INTO SYNONYM VALUES (NULL,VSYNONYM);
END;
CALL PSYNONYM("TRUMP");
CALL PSYNONYM("MACRON")</string>
		<string>DROP PROCEDURE IF EXISTS PPOS_TAGGING;
CREATE PROCEDURE PPOS_TAGGING (IN VPOS_TAG VARCHAR(25))   
BEGIN
	INSERT INTO POS_TAGGING VALUES (NULL,VPOS_TAG);

END;
CALL PPOS_TAGGING('adjectif')</string>
		<string>DROP PROCEDURE IF EXISTS PPOS_TAGGING;
CREATE PROCEDURE PPOS_TAGGING (IN VPOS_TAG VARCHAR)   
BEGIN
	INSERT INTO POS_TAGGING VALUES (NULL,VPOS_TAG);

END;
CALL PPOS_TAGGING('adjectif')</string>
		<string>DROP PROCEDURE IF EXISTS PPOS_TAGGING;
CREATE PROCEDURE PPOS_TAGGING (IN VPOS_TAG VARCHAR)   
BEGIN
	INSERT INTO POS_TAGGING VALUES (NULL ,VPOS_TAG);

END</string>
		<string>DROP PROCEDURE IF EXISTS PPOS_TAGGING;
CREATE PROCEDURE PPOS_TAGGING (IN VPOS_TAG VARCHAR)   
BEGIN
	 
     INSERT INTO POS_TAGGING VALUES (NULL ,VPOS_TAG);

END</string>
		<string>DROP PROCEDURE IF EXISTS PPOS_TAGGING;
CREATE PROCEDURE PPOS_TAGGING (IN VPOS_TAG VARCHAR)   
BEGIN
	 
     INSERT INTO PPOS_TAGGING VALUES (NULL ,VPOS_TAG);

END</string>
		<string>DROP PROCEDURE IF EXISTS PNEWSPAPER;
CREATE PROCEDURE PNEWSPAPER (IN VNAME_NEWSPAPER VARCHAR(50),IN VLINK_NEWSPAPER VARCHAR(2083),IN VLINK_LOGO VARCHAR(2083))
BEGIN
     INSERT INTO NEWSPAPER VALUES (NULL,VNAME_NEWSPAPER,VLINK_NEWSPAPER,VLINK_LOGO);
END;
CALL PNEWSPAPER("LIBERATION","HTTP liberation","http image")</string>
		<string>DROP PROCEDURE IF EXISTS PJOURNAL;
CREATE PROCEDURE PJOURNAL (IN VNOM_JOURNAL VARCHAR(50),IN VLIEN_JOURNAL VARCHAR(2083),IN VLIEN_LOGO VARCHAR(2083))
BEGIN
     INSERT INTO JOURNAL VALUES (NULL,VNOM_JOURNAL,VLIEN_JOURNAL,VLIEN_LOGO);
END;
CALL PJOURNAL("LIBERATION","HTTP liberation","http image")</string>
		<string>DROP PROCEDURE IF EXISTS PENTITY;
CREATE PROCEDURE PENTITY (IN VENTITY VARCHAR(50))   
BEGIN
     INSERT INTO ENTITY VALUES (NULL,VENTITY);
END;
CALL PENTITY("PERSONNE");
CALL PENTITY("LIEU")</string>
	</array>
	<key>rdbms_type</key>
	<string>mysql</string>
	<key>rdbms_version</key>
	<string>5.7.20</string>
	<key>version</key>
	<integer>1</integer>
</dict>
</plist>
