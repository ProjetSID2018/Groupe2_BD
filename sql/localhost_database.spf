<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE plist PUBLIC "-//Apple//DTD PLIST 1.0//EN" "http://www.apple.com/DTDs/PropertyList-1.0.dtd">
<plist version="1.0">
<dict>
	<key>ContentFilters</key>
	<dict/>
	<key>auto_connect</key>
	<true/>
	<key>data</key>
	<data>
	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
	Co7C7iTZkjOVniHIkDDJg18hlqArcg==
	</data>
	<key>encrypted</key>
	<true/>
	<key>format</key>
	<string>connection</string>
	<key>queryFavorites</key>
	<array/>
	<key>queryHistory</key>
	<array>
		<string>DROP PROCEDURE IF EXISTS PAUTHOR;
CREATE PROCEDURE PAUTHOR (IN VID_ARTICLE INT, IN VSURNAME_AUTHOR VARCHAR(50), IN VFIRSTNAME_AUTHOR VARCHAR(50))   
BEGIN
	
	DECLARE COUNT_ID_ INT DEFAULT 0;
	DECLARE VID_AUTHOR INT DEFAULT 0;
	
	DECLARE CONTINUE HANDLER FOR NOT FOUND SET VID_AUTHOR = NULL;

	SELECT AUTHOR.ID_AUTHOR INTO VID_AUTHOR
	FROM AUTHOR 
	WHERE AUTHOR.SURNAME_AUTHOR = VSURNAME_AUTHOR
	AND AUTHOR.FIRSTNAME_AUTHOR = VFIRSTNAME_AUTHOR;

	IF (VID_AUTHOR = NULL)  THEN
		INSERT INTO AUTHOR (ID_AUTHOR, SURNAME_AUTHOR, FIRSTNAME_AUTHOR) VALUES (NULL, VSURNAME_AUTHOR,VFIRSTNAME_AUTHOR);
    	SELECT LAST_INSERT_ID() INTO VID_AUTHOR;

    INSERT INTO REALIZE (ID_AUTHOR, ID_ARTICLE) VALUES (VID_AUTOR ,VID_ARTICLE);

END</string>
		<string>CALL PSYNONYM('ESSAI','test')</string>
		<string>DROP PROCEDURE IF EXISTS PSYNONYM;
CREATE PROCEDURE PSYNONYM (IN VSYNONYM VARCHAR(50), IN VWORD VARCHAR(50))   
BEGIN
	DECLARE VID_SYNONYM INT DEFAULT 0;

	INSERT INTO SYNONYM VALUES (NULL,VSYNONYM);
    SELECT LAST_INSERT_ID() INTO VID_SYNONYM;

    UPDATE WORD
	SET WORD.ID_SYNONYM = VID_SYNONYM
	WHERE WORD.WORD = VWORD;

END</string>
		<string>#------------------------------------------------------------
#        Script MySQL.
#------------------------------------------------------------


#------------------------------------------------------------
# Table: article
#------------------------------------------------------------

CREATE TABLE article(
        id_article       int (11) Auto_increment  NOT NULL ,
        date_publication Date ,
        rate_positivity  Float ,
        rate_negativity  Float ,
        rate_joy         Float ,
        rate_fear        Float ,
        rate_sadness     Float ,
        rate_angry       Float ,
        rate_surprise    Float ,
        rate_disgust     Float ,
        id_newspaper     Int NOT NULL ,
        PRIMARY KEY (id_article )
)ENGINE=InnoDB;
#------------------------------------------------------------
# Table: newspaper
#------------------------------------------------------------

CREATE TABLE newspaper(
        id_newspaper   int (11) Auto_increment  NOT NULL ,
        name_newspaper Varchar (50) ,
        link_newspaper Varchar (255) ,
        link_logo      Varchar (255) ,
        PRIMARY KEY (id_newspaper ) ,
        UNIQUE (name_newspaper ,link_newspaper ,link_logo )
)ENGINE=InnoDB;
#------------------------------------------------------------
# Table: author
#------------------------------------------------------------

CREATE TABLE author(
        id_author        int (11) Auto_increment  NOT NULL ,
        surname_author   Varchar (50) ,
        firstname_author Varchar (50) ,
        PRIMARY KEY (id_author )
)ENGINE=InnoDB;
#------------------------------------------------------------
# Table: label
#------------------------------------------------------------

CREATE TABLE label(
        id_label int (11) Auto_increment  NOT NULL ,
        label    Varchar (25) ,
        PRIMARY KEY (id_label ) ,
        UNIQUE (label )
)ENGINE=InnoDB;
#------------------------------------------------------------
# Table: lemma
#------------------------------------------------------------

CREATE TABLE lemma(
        id_lemma int (11) Auto_increment  NOT NULL ,
        lemma    Varchar (25) ,
        PRIMARY KEY (id_lemma ) ,
        UNIQUE (lemma )
)ENGINE=InnoDB;
#------------------------------------------------------------
# Table: entity
#------------------------------------------------------------

CREATE TABLE entity(
        id_entity   int (11) Auto_increment  NOT NULL ,
        type_entity Varchar (25) ,
        PRIMARY KEY (id_entity ) ,
        UNIQUE (type_entity )
)ENGINE=InnoDB;
#------------------------------------------------------------
# Table: word
#------------------------------------------------------------

CREATE TABLE word(
        id_word  int (11) Auto_increment  NOT NULL ,
        word     Varchar (50) NOT NULL ,
        id_lemma Int,
        id_synonym Int,
        PRIMARY KEY (id_word ) ,
        UNIQUE (word )
)ENGINE=InnoDB;
#------------------------------------------------------------
# Table: pos_tagging
#------------------------------------------------------------

CREATE TABLE pos_tagging(
        id_pos_tag int (11) Auto_increment  NOT NULL ,
        pos_tag    Varchar (25) ,
        PRIMARY KEY (id_pos_tag ) ,
        UNIQUE (pos_tag )
)ENGINE=InnoDB;
#------------------------------------------------------------
# Table: position_word
#------------------------------------------------------------

CREATE TABLE position_word(
        id_position int (11) Auto_increment  NOT NULL ,
        position    Int NOT NULL ,
        title       Boolean NOT NULL ,
        id_word     Int NOT NULL ,
        id_entity   Int,
        id_pos_tag  Int,
        id_article  Int NOT NULL ,
        id_wiki     Int,
        PRIMARY KEY (id_position )
)ENGINE=InnoDB;
#------------------------------------------------------------
# Table: synonym
#------------------------------------------------------------

CREATE TABLE synonym(
        id_synonym int (11) Auto_increment  NOT NULL ,
        synonym    Varchar (50) NOT NULL ,
        PRIMARY KEY (id_synonym ) ,
        UNIQUE (synonym )
)ENGINE=InnoDB;
#------------------------------------------------------------
# Table: wiki
#------------------------------------------------------------

CREATE TABLE wiki(
        id_wiki   int (11) Auto_increment  NOT NULL ,
        file_wiki Varchar (255) NOT NULL ,
        PRIMARY KEY (id_wiki ) ,
        UNIQUE (file_wiki )
)ENGINE=InnoDB;
#------------------------------------------------------------
# Table: realize
#------------------------------------------------------------

CREATE TABLE realize(
        id_article Int NOT NULL ,
        id_author  Int NOT NULL ,
        PRIMARY KEY (id_article ,id_author )
)ENGINE=InnoDB;
#------------------------------------------------------------
# Table: belong
#------------------------------------------------------------

CREATE TABLE belong(
        id_article Int NOT NULL ,
        id_label   Int NOT NULL ,
        PRIMARY KEY (id_article ,id_label )
)ENGINE=InnoDB;
ALTER TABLE article ADD CONSTRAINT FK_article_id_newspaper FOREIGN KEY (id_newspaper) REFERENCES newspaper(id_newspaper);
ALTER TABLE word ADD CONSTRAINT FK_word_id_lemma FOREIGN KEY (id_lemma) REFERENCES lemma(id_lemma);
ALTER TABLE position_word ADD CONSTRAINT FK_position_word_id_word FOREIGN KEY (id_word) REFERENCES word(id_word);
ALTER TABLE position_word ADD CONSTRAINT FK_position_word_id_entity FOREIGN KEY (id_entity) REFERENCES entity(id_entity);
ALTER TABLE position_word ADD CONSTRAINT FK_position_word_id_pos_tag FOREIGN KEY (id_pos_tag) REFERENCES pos_tagging(id_pos_tag);
ALTER TABLE position_word ADD CONSTRAINT FK_position_word_id_article FOREIGN KEY (id_article) REFERENCES article(id_article);
ALTER TABLE position_word ADD CONSTRAINT FK_position_word_id_wiki FOREIGN KEY (id_wiki) REFERENCES wiki(id_wiki);
ALTER TABLE word ADD CONSTRAINT FK_word_id_synonym FOREIGN KEY (id_synonym) REFERENCES synonym(id_synonym);
ALTER TABLE realize ADD CONSTRAINT FK_realize_id_article FOREIGN KEY (id_article) REFERENCES article(id_article);
ALTER TABLE realize ADD CONSTRAINT FK_realize_id_author FOREIGN KEY (id_author) REFERENCES author(id_author);
ALTER TABLE belong ADD CONSTRAINT FK_belong_id_article FOREIGN KEY (id_article) REFERENCES article(id_article);
ALTER TABLE belong ADD CONSTRAINT FK_belong_id_label FOREIGN KEY (id_label) REFERENCES label(id_label)</string>
		<string>#------------------------------------------------------------
#        Script MySQL.
#------------------------------------------------------------


#------------------------------------------------------------
# Table: article
#------------------------------------------------------------

CREATE TABLE article(
        id_article       int (11) Auto_increment  NOT NULL ,
        date_publication Date ,
        rate_positivity  Float ,
        rate_negativity  Float ,
        rate_joy         Float ,
        rate_fear        Float ,
        rate_sadness     Float ,
        rate_angry       Float ,
        rate_surprise    Float ,
        rate_disgust     Float ,
        id_newspaper     Int NOT NULL ,
        PRIMARY KEY (id_article )
)ENGINE=InnoDB;
#------------------------------------------------------------
# Table: newspaper
#------------------------------------------------------------

CREATE TABLE newspaper(
        id_newspaper   int (11) Auto_increment  NOT NULL ,
        name_newspaper Varchar (50) ,
        link_newspaper Varchar (255) ,
        link_logo      Varchar (255) ,
        PRIMARY KEY (id_newspaper ) ,
        UNIQUE (name_newspaper ,link_newspaper ,link_logo )
)ENGINE=InnoDB;
#------------------------------------------------------------
# Table: author
#------------------------------------------------------------

CREATE TABLE author(
        id_author        int (11) Auto_increment  NOT NULL ,
        surname_author   Varchar (50) ,
        firstname_author Varchar (50) ,
        PRIMARY KEY (id_author )
)ENGINE=InnoDB;
#------------------------------------------------------------
# Table: label
#------------------------------------------------------------

CREATE TABLE label(
        id_label int (11) Auto_increment  NOT NULL ,
        label    Varchar (25) ,
        PRIMARY KEY (id_label ) ,
        UNIQUE (label )
)ENGINE=InnoDB;
#------------------------------------------------------------
# Table: lemma
#------------------------------------------------------------

CREATE TABLE lemma(
        id_lemma int (11) Auto_increment  NOT NULL ,
        lemma    Varchar (25) ,
        PRIMARY KEY (id_lemma ) ,
        UNIQUE (lemma )
)ENGINE=InnoDB;
#------------------------------------------------------------
# Table: entity
#------------------------------------------------------------

CREATE TABLE entity(
        id_entity   int (11) Auto_increment  NOT NULL ,
        type_entity Varchar (25) ,
        PRIMARY KEY (id_entity ) ,
        UNIQUE (type_entity )
)ENGINE=InnoDB;
#------------------------------------------------------------
# Table: word
#------------------------------------------------------------

CREATE TABLE word(
        id_word  int (11) Auto_increment  NOT NULL ,
        word     Varchar (50) NOT NULL ,
        id_lemma Int,
        PRIMARY KEY (id_word ) ,
        UNIQUE (word )
)ENGINE=InnoDB;
#------------------------------------------------------------
# Table: pos_tagging
#------------------------------------------------------------

CREATE TABLE pos_tagging(
        id_pos_tag int (11) Auto_increment  NOT NULL ,
        pos_tag    Varchar (25) ,
        PRIMARY KEY (id_pos_tag ) ,
        UNIQUE (pos_tag )
)ENGINE=InnoDB;
#------------------------------------------------------------
# Table: position_word
#------------------------------------------------------------

CREATE TABLE position_word(
        id_position int (11) Auto_increment  NOT NULL ,
        position    Int NOT NULL ,
        title       Boolean NOT NULL ,
        id_word     Int NOT NULL ,
        id_entity   Int,
        id_pos_tag  Int,
        id_article  Int NOT NULL ,
        id_synonym  Int,
        id_wiki     Int,
        PRIMARY KEY (id_position )
)ENGINE=InnoDB;
#------------------------------------------------------------
# Table: synonym
#------------------------------------------------------------

CREATE TABLE synonym(
        id_synonym int (11) Auto_increment  NOT NULL ,
        synonym    Varchar (50) NOT NULL ,
        PRIMARY KEY (id_synonym ) ,
        UNIQUE (synonym )
)ENGINE=InnoDB;
#------------------------------------------------------------
# Table: wiki
#------------------------------------------------------------

CREATE TABLE wiki(
        id_wiki   int (11) Auto_increment  NOT NULL ,
        file_wiki Varchar (255) NOT NULL ,
        PRIMARY KEY (id_wiki ) ,
        UNIQUE (file_wiki )
)ENGINE=InnoDB;
#------------------------------------------------------------
# Table: realize
#------------------------------------------------------------

CREATE TABLE realize(
        id_article Int NOT NULL ,
        id_author  Int NOT NULL ,
        PRIMARY KEY (id_article ,id_author )
)ENGINE=InnoDB;
#------------------------------------------------------------
# Table: belong
#------------------------------------------------------------

CREATE TABLE belong(
        id_article Int NOT NULL ,
        id_label   Int NOT NULL ,
        PRIMARY KEY (id_article ,id_label )
)ENGINE=InnoDB;
ALTER TABLE article ADD CONSTRAINT FK_article_id_newspaper FOREIGN KEY (id_newspaper) REFERENCES newspaper(id_newspaper);
ALTER TABLE word ADD CONSTRAINT FK_word_id_lemma FOREIGN KEY (id_lemma) REFERENCES lemma(id_lemma);
ALTER TABLE position_word ADD CONSTRAINT FK_position_word_id_word FOREIGN KEY (id_word) REFERENCES word(id_word);
ALTER TABLE position_word ADD CONSTRAINT FK_position_word_id_entity FOREIGN KEY (id_entity) REFERENCES entity(id_entity);
ALTER TABLE position_word ADD CONSTRAINT FK_position_word_id_pos_tag FOREIGN KEY (id_pos_tag) REFERENCES pos_tagging(id_pos_tag);
ALTER TABLE position_word ADD CONSTRAINT FK_position_word_id_article FOREIGN KEY (id_article) REFERENCES article(id_article);
ALTER TABLE position_word ADD CONSTRAINT FK_position_word_id_synonym FOREIGN KEY (id_synonym) REFERENCES synonym(id_synonym);
ALTER TABLE position_word ADD CONSTRAINT FK_position_word_id_wiki FOREIGN KEY (id_wiki) REFERENCES wiki(id_wiki);
ALTER TABLE realize ADD CONSTRAINT FK_realize_id_article FOREIGN KEY (id_article) REFERENCES article(id_article);
ALTER TABLE realize ADD CONSTRAINT FK_realize_id_author FOREIGN KEY (id_author) REFERENCES author(id_author);
ALTER TABLE belong ADD CONSTRAINT FK_belong_id_article FOREIGN KEY (id_article) REFERENCES article(id_article);
ALTER TABLE belong ADD CONSTRAINT FK_belong_id_label FOREIGN KEY (id_label) REFERENCES label(id_label)</string>
		<string>#------------------------------------------------------------
#        Script MySQL.
#------------------------------------------------------------


#------------------------------------------------------------
# Table: article
#------------------------------------------------------------

CREATE TABLE article(
        id_article       int (11) Auto_increment  NOT NULL ,
        date_publication Date ,
        rate_positivity  Float ,
        rate_negativity  Float ,
        rate_joy         Float ,
        rate_fear        Float ,
        rate_sadness     Float ,
        rate_angry       Float ,
        rate_surprise    Float ,
        rate_disgust     Float ,
        id_newspaper     Int NOT NULL ,
        PRIMARY KEY (id_article )
)ENGINE=InnoDB</string>
		<string>#------------------------------------------------------------
#        Script MySQL.
#------------------------------------------------------------


#------------------------------------------------------------
# Table: article
#------------------------------------------------------------

CREATE TABLE article(
        id_article       int (11) Auto_increment  NOT NULL ,
        date_publication Date ,
        rate_positivity  Float ,
        rate_negativity  Float ,
        rate_joy         Float ,
        rate_fear        Float ,
        rate_sadness     Float ,
        rate_angry       Float ,
        rate_surprise    Float ,
        rate_disgust     Float ,
        id_newspaper     Int NOT NULL ,
        PRIMARY KEY (id_article )
)ENGINE=InnoDB;
#------------------------------------------------------------
# Table: newspaper
#------------------------------------------------------------

CREATE TABLE newspaper(
        id_newspaper   int (11) Auto_increment  NOT NULL ,
        name_newspaper Varchar (50) ,
        link_newspaper Varchar (500) ,
        link_logo      Varchar (500) ,
        PRIMARY KEY (id_newspaper ) ,
        UNIQUE (name_newspaper ,link_newspaper ,link_logo )
)ENGINE=InnoDB;
#------------------------------------------------------------
# Table: author
#------------------------------------------------------------

CREATE TABLE author(
        id_author        int (11) Auto_increment  NOT NULL ,
        surname_author   Varchar (50) ,
        firstname_author Varchar (50) ,
        PRIMARY KEY (id_author )
)ENGINE=InnoDB;
#------------------------------------------------------------
# Table: label
#------------------------------------------------------------

CREATE TABLE label(
        id_label int (11) Auto_increment  NOT NULL ,
        label    Varchar (25) ,
        PRIMARY KEY (id_label ) ,
        UNIQUE (label )
)ENGINE=InnoDB;
#------------------------------------------------------------
# Table: lemma
#------------------------------------------------------------

CREATE TABLE lemma(
        id_lemma int (11) Auto_increment  NOT NULL ,
        lemma    Varchar (25) ,
        PRIMARY KEY (id_lemma ) ,
        UNIQUE (lemma )
)ENGINE=InnoDB;
#------------------------------------------------------------
# Table: entity
#------------------------------------------------------------

CREATE TABLE entity(
        id_entity   int (11) Auto_increment  NOT NULL ,
        type_entity Varchar (25) ,
        PRIMARY KEY (id_entity ) ,
        UNIQUE (type_entity )
)ENGINE=InnoDB;
#------------------------------------------------------------
# Table: word
#------------------------------------------------------------

CREATE TABLE word(
        id_word  int (11) Auto_increment  NOT NULL ,
        word     Varchar (50) NOT NULL ,
        id_lemma Int,
        PRIMARY KEY (id_word ) ,
        UNIQUE (word )
)ENGINE=InnoDB;
#------------------------------------------------------------
# Table: pos_tagging
#------------------------------------------------------------

CREATE TABLE pos_tagging(
        id_pos_tag int (11) Auto_increment  NOT NULL ,
        pos_tag    Varchar (25) ,
        PRIMARY KEY (id_pos_tag ) ,
        UNIQUE (pos_tag )
)ENGINE=InnoDB;
#------------------------------------------------------------
# Table: position_word
#------------------------------------------------------------

CREATE TABLE position_word(
        id_position int (11) Auto_increment  NOT NULL ,
        position    Int NOT NULL ,
        title       Boolean NOT NULL ,
        id_word     Int NOT NULL ,
        id_entity   Int,
        id_pos_tag  Int,
        id_article  Int NOT NULL ,
        id_synonym  Int,
        id_wiki     Int,
        PRIMARY KEY (id_position )
)ENGINE=InnoDB;
#------------------------------------------------------------
# Table: synonym
#------------------------------------------------------------

CREATE TABLE synonym(
        id_synonym int (11) Auto_increment  NOT NULL ,
        synonym    Varchar (50) NOT NULL ,
        PRIMARY KEY (id_synonym ) ,
        UNIQUE (synonym )
)ENGINE=InnoDB;
#------------------------------------------------------------
# Table: wiki
#------------------------------------------------------------

CREATE TABLE wiki(
        id_wiki   int (11) Auto_increment  NOT NULL ,
        file_wiki Varchar (500) NOT NULL ,
        PRIMARY KEY (id_wiki ) ,
        UNIQUE (file_wiki )
)ENGINE=InnoDB;
#------------------------------------------------------------
# Table: realize
#------------------------------------------------------------

CREATE TABLE realize(
        id_article Int NOT NULL ,
        id_author  Int NOT NULL ,
        PRIMARY KEY (id_article ,id_author )
)ENGINE=InnoDB;
#------------------------------------------------------------
# Table: belong
#------------------------------------------------------------

CREATE TABLE belong(
        id_article Int NOT NULL ,
        id_label   Int NOT NULL ,
        PRIMARY KEY (id_article ,id_label )
)ENGINE=InnoDB;
ALTER TABLE article ADD CONSTRAINT FK_article_id_newspaper FOREIGN KEY (id_newspaper) REFERENCES newspaper(id_newspaper);
ALTER TABLE word ADD CONSTRAINT FK_word_id_lemma FOREIGN KEY (id_lemma) REFERENCES lemma(id_lemma);
ALTER TABLE position_word ADD CONSTRAINT FK_position_word_id_word FOREIGN KEY (id_word) REFERENCES word(id_word);
ALTER TABLE position_word ADD CONSTRAINT FK_position_word_id_entity FOREIGN KEY (id_entity) REFERENCES entity(id_entity);
ALTER TABLE position_word ADD CONSTRAINT FK_position_word_id_pos_tag FOREIGN KEY (id_pos_tag) REFERENCES pos_tagging(id_pos_tag);
ALTER TABLE position_word ADD CONSTRAINT FK_position_word_id_article FOREIGN KEY (id_article) REFERENCES article(id_article);
ALTER TABLE position_word ADD CONSTRAINT FK_position_word_id_synonym FOREIGN KEY (id_synonym) REFERENCES synonym(id_synonym);
ALTER TABLE position_word ADD CONSTRAINT FK_position_word_id_wiki FOREIGN KEY (id_wiki) REFERENCES wiki(id_wiki);
ALTER TABLE realize ADD CONSTRAINT FK_realize_id_article FOREIGN KEY (id_article) REFERENCES article(id_article);
ALTER TABLE realize ADD CONSTRAINT FK_realize_id_author FOREIGN KEY (id_author) REFERENCES author(id_author);
ALTER TABLE belong ADD CONSTRAINT FK_belong_id_article FOREIGN KEY (id_article) REFERENCES article(id_article);
ALTER TABLE belong ADD CONSTRAINT FK_belong_id_label FOREIGN KEY (id_label) REFERENCES label(id_label)</string>
		<string>#------------------------------------------------------------
#        Script MySQL.
#------------------------------------------------------------


#------------------------------------------------------------
# Table: article
#------------------------------------------------------------

CREATE TABLE article(
        id_article       int (11) Auto_increment  NOT NULL ,
        date_publication Date ,
        rate_positivity  Float ,
        rate_negativity  Float ,
        rate_joy         Float ,
        rate_fear        Float ,
        rate_sadness     Float ,
        rate_angry       Float ,
        rate_surprise    Float ,
        rate_disgust     Float ,
        id_newspaper     Int NOT NULL ,
        PRIMARY KEY (id_article )
)ENGINE=InnoDB;
#------------------------------------------------------------
# Table: newspaper
#------------------------------------------------------------

CREATE TABLE newspaper(
        id_newspaper   int (11) Auto_increment  NOT NULL ,
        name_newspaper Varchar (50) ,
        link_newspaper Varchar (2083) ,
        link_logo      Varchar (2083) ,
        PRIMARY KEY (id_newspaper ) ,
        UNIQUE (name_newspaper )
)ENGINE=InnoDB;
#------------------------------------------------------------
# Table: author
#------------------------------------------------------------

CREATE TABLE author(
        id_author        int (11) Auto_increment  NOT NULL ,
        surname_author   Varchar (50) ,
        firstname_author Varchar (50) ,
        PRIMARY KEY (id_author )
)ENGINE=InnoDB;
#------------------------------------------------------------
# Table: label
#------------------------------------------------------------

CREATE TABLE label(
        id_label int (11) Auto_increment  NOT NULL ,
        label    Varchar (25) ,
        PRIMARY KEY (id_label ) ,
        UNIQUE (label )
)ENGINE=InnoDB;
#------------------------------------------------------------
# Table: lemma
#------------------------------------------------------------

CREATE TABLE lemma(
        id_lemma int (11) Auto_increment  NOT NULL ,
        lemma    Varchar (25) ,
        PRIMARY KEY (id_lemma ) ,
        UNIQUE (lemma )
)ENGINE=InnoDB;
#------------------------------------------------------------
# Table: entity
#------------------------------------------------------------

CREATE TABLE entity(
        id_entity   int (11) Auto_increment  NOT NULL ,
        type_entity Varchar (25) ,
        PRIMARY KEY (id_entity ) ,
        UNIQUE (type_entity )
)ENGINE=InnoDB;
#------------------------------------------------------------
# Table: word
#------------------------------------------------------------

CREATE TABLE word(
        id_word  int (11) Auto_increment  NOT NULL ,
        word     Varchar (50) NOT NULL ,
        id_lemma Int,
        PRIMARY KEY (id_word ) ,
        UNIQUE (word )
)ENGINE=InnoDB;
#------------------------------------------------------------
# Table: pos_tagging
#------------------------------------------------------------

CREATE TABLE pos_tagging(
        id_pos_tag int (11) Auto_increment  NOT NULL ,
        pos_tag    Varchar (25) ,
        PRIMARY KEY (id_pos_tag ) ,
        UNIQUE (pos_tag )
)ENGINE=InnoDB;
#------------------------------------------------------------
# Table: position_word
#------------------------------------------------------------

CREATE TABLE position_word(
        id_position int (11) Auto_increment  NOT NULL ,
        position    Int NOT NULL ,
        title       Boolean NOT NULL ,
        id_word     Int NOT NULL ,
        id_entity   Int,
        id_pos_tag  Int,
        id_article  Int NOT NULL ,
        id_synonym  Int,
        id_wiki     Int,
        PRIMARY KEY (id_position )
)ENGINE=InnoDB;
#------------------------------------------------------------
# Table: synonym
#------------------------------------------------------------

CREATE TABLE synonym(
        id_synonym int (11) Auto_increment  NOT NULL ,
        synonym    Varchar (50) NOT NULL ,
        PRIMARY KEY (id_synonym ) ,
        UNIQUE (synonym )
)ENGINE=InnoDB;
#------------------------------------------------------------
# Table: wiki
#------------------------------------------------------------

CREATE TABLE wiki(
        id_wiki   int (11) Auto_increment  NOT NULL ,
        file_wiki Varchar (2803) NOT NULL ,
        PRIMARY KEY (id_wiki )
)ENGINE=InnoDB;
#------------------------------------------------------------
# Table: realize
#------------------------------------------------------------

CREATE TABLE realize(
        id_article Int NOT NULL ,
        id_author  Int NOT NULL ,
        PRIMARY KEY (id_article ,id_author )
)ENGINE=InnoDB;
#------------------------------------------------------------
# Table: belong
#------------------------------------------------------------

CREATE TABLE belong(
        id_article Int NOT NULL ,
        id_label   Int NOT NULL ,
        PRIMARY KEY (id_article ,id_label )
)ENGINE=InnoDB;
ALTER TABLE article ADD CONSTRAINT FK_article_id_newspaper FOREIGN KEY (id_newspaper) REFERENCES newspaper(id_newspaper);
ALTER TABLE word ADD CONSTRAINT FK_word_id_lemma FOREIGN KEY (id_lemma) REFERENCES lemma(id_lemma);
ALTER TABLE position_word ADD CONSTRAINT FK_position_word_id_word FOREIGN KEY (id_word) REFERENCES word(id_word);
ALTER TABLE position_word ADD CONSTRAINT FK_position_word_id_entity FOREIGN KEY (id_entity) REFERENCES entity(id_entity);
ALTER TABLE position_word ADD CONSTRAINT FK_position_word_id_pos_tag FOREIGN KEY (id_pos_tag) REFERENCES pos_tagging(id_pos_tag);
ALTER TABLE position_word ADD CONSTRAINT FK_position_word_id_article FOREIGN KEY (id_article) REFERENCES article(id_article);
ALTER TABLE position_word ADD CONSTRAINT FK_position_word_id_synonym FOREIGN KEY (id_synonym) REFERENCES synonym(id_synonym);
ALTER TABLE position_word ADD CONSTRAINT FK_position_word_id_wiki FOREIGN KEY (id_wiki) REFERENCES wiki(id_wiki);
ALTER TABLE realize ADD CONSTRAINT FK_realize_id_article FOREIGN KEY (id_article) REFERENCES article(id_article);
ALTER TABLE realize ADD CONSTRAINT FK_realize_id_author FOREIGN KEY (id_author) REFERENCES author(id_author);
ALTER TABLE belong ADD CONSTRAINT FK_belong_id_article FOREIGN KEY (id_article) REFERENCES article(id_article);
ALTER TABLE belong ADD CONSTRAINT FK_belong_id_label FOREIGN KEY (id_label) REFERENCES label(id_label)</string>
		<string>DROP PROCEDURE IF EXISTS PREALIZE;
CREATE PROCEDURE PREALIZE (IN VID_AUTOR INT, IN VID_ARTICLE INT)   
BEGIN
	 
     INSERT INTO REALIZE (ID_AUTHOR, ID_ARTICLE) VALUES (VID_AUTOR ,VID_ARTICLE);

END;
CALL PREALIZE(1,2)</string>
		<string>DROP PROCEDURE IF EXISTS PREALIZE;
CREATE PROCEDURE PREALIZE (IN VID_AUTOR INT, IN VID_ARTICLE INT)   
BEGIN
	 
     INSERT INTO REALIZE VALUES (VID_AUTOR ,VID_ARTICLE);

END;
CALL PREALIZE(1,2)</string>
		<string>DROP PROCEDURE IF EXISTS PREALIZE;
CREATE PROCEDURE PREALIZE (IN VID_AUTOR INT, IN VID_ARTICLE INT)   
BEGIN
	 
     INSERT INTO REALIZE VALUES (VID_AUTOR ,VID_ARTICLE);

END;
CALL PREALIZE(1,1)</string>
		<string>DROP PROCEDURE IF EXISTS PPOSITION_WORD;
CREATE PROCEDURE PPOSITION_WORD (IN VPOSITION INT, IN VTITLE BOOLEAN, IN VID_WORD INT, VID_ENTITY INT, IN VID_POS_TAG INT, IN VID_ARTICLE INT,IN VID_SYNONYM INT,IN VID_WIKI INT)   

BEGIN

     INSERT INTO POSITION_WORD (ID_POSITION, POSITION,TITLE,ID_WORD,ID_ENTITY,ID_POS_TAG,ID_ARTICLE,ID_SYNONYM,ID_WIKI) 
     VALUES (NULL, VPOSITION,VTITLE,VID_WORD,VID_ENTITY,VID_POS_TAG,VID_ARTICLE,VID_SYNONYM,VID_WIKI);

END;
CALL PPOSITION_WORD(18,TRUE,1,1,1,2,1,1)</string>
		<string>DROP PROCEDURE IF EXISTS PPOSITION_WORD;
CREATE PROCEDURE PPOSITION_WORD (IN VPOSITION INT, IN VTITLE BOOLEAN, IN VID_WORD INT, VID_ENTITY INT, IN VID_POS_TAG INT, IN VID_ARTICLE INT,IN VID_SYNONYM INT,IN VID_WIKI INT)   

BEGIN

     INSERT INTO POSITION_WORD (ID_POSITION, POSITION,TITLE,ID_WORD,ID_ENTITY,ID_POS_TAG,ID_ARTICLE,ID_SYNONYM,ID_WIKI) 
     VALUES (NULL, VPOSITION,VTITLE,VID_WORD,VID_ENTITY,VID_POS_TAG,VID_ARTICLE,VID_SYNONYM,VID_WIKI);

END;
CALL PPOSITION_WORD(18,TRUE,1,1,2,2,1,1)</string>
		<string>DROP PROCEDURE IF EXISTS PPOSITION_WORD;
CREATE PROCEDURE PPOSITION_WORD (IN VPOSITION INT, IN VTITLE BOOLEAN, IN VID_WORD INT, VID_ENTITY INT, IN VID_POS_TAG INT, IN VID_ARTICLE INT,IN VID_SYNONYM INT,IN VID_WIKI INT)   

BEGIN

     INSERT INTO POSITION_WORD (ID_POSITION, POSITION,TITLE,ID_WORD,ID_ENTITY,ID_POS_TAG,ID_ARTICLE,ID_SYNONYM,ID_WIKI) 
     VALUES (NULL, VPOSITION,VTITLE,VID_WORD,VID_ENTITY,VID_POS_TAG,VID_ARTICLE,VID_SYNONYM,VID_WIKI);

END;
CALL PPOSITION_WORD(2,TRUE,1,1,1,1,1,1)</string>
		<string>DROP PROCEDURE IF EXISTS PPOSITION_WORD;
CREATE PROCEDURE PPOSITION_WORD (IN VPOSITION INT, IN VTITLE BOOLEAN, IN VID_WORD INT, VID_ENTITY INT, IN VID_POS_TAG INT, IN VID_ARTICLE INT,IN VID_SYNONYM INT,IN VID_WIKI INT)   

BEGIN

     INSERT INTO POSITION_WORD (ID_POSITION, POSITION,TITLE,ID_WORD,ID_ENTITY,ID_POS_TAG,ID_ARTICLE,ID_SYNONYM,ID_WIKI) 
     VALUES (NULL, VPOSITION,VTITLE,VID_WORD,VID_ENTITY,VID_POS_TAG,VID_ARTICLE,VID_SYNONYM,VID_WIKI);

END;
CALL PPOSITION_WORD(1,TRUE,1,1,1,1,1,1)</string>
		<string>DROP PROCEDURE IF EXISTS PARTICLE;
CREATE PROCEDURE PARTICLE (IN VDATE_PUBLICATION DATE, IN VRATE_POSITIVITY FLOAT, IN VRATE_NEGATIVITY FLOAT,
    IN VRATE_JOY FLOAT, IN VRATE_FEAR FLOAT, IN VRATE_SADNESS FLOAT, IN VRATE_ANGRY FLOAT,
    IN VRATE_SURPRISE FLOAT, IN VRATE_DISGUST FLOAT, IN VID_NEWSPAPER INT, OUT VID_ARTICLE INT)

BEGIN

    INSERT INTO ARTICLE (id_article, date_publication, rate_positivity, rate_negativity, rate_joy, rate_fear, rate_sadness, rate_angry, rate_surprise, rate_disgust, id_newspaper) 
	VALUES (NULL,VDATE_PUBLICATION,VRATE_POSITIVITY,VRATE_NEGATIVITY,VRATE_JOY,VRATE_FEAR,
     VRATE_SADNESS,VRATE_ANGRY,VRATE_SURPRISE,VRATE_DISGUST,VID_NEWSPAPER);
    SELECT LAST_INSERT_ID() INTO VID_ARTICLE;

END;
CALL PARTICLE("2017-12-31",0.10,0.11,0.12,0.13,0.14,0.15,0.16,0.17,1,@VID_ARTICLE);
SELECT @VID_ARTICLE</string>
		<string>DROP PROCEDURE IF EXISTS PREALIZE;
CREATE PROCEDURE PWRITE (IN VID_AUTOR INT, IN VID_ARTICLE INT)   
BEGIN
	 
     INSERT INTO REALIZE VALUES (VID_AUTOR ,VID_ARTICLE);

END;
CALL PREALIZE(1,1)</string>
		<string>DROP PROCEDURE IF EXISTS PWORD;
CREATE PROCEDURE PWORD (IN VWORD VARCHAR(50), IN VLEMMA VARCHAR(50), OUT VID_WORD INT)   



BEGIN
DECLARE VID_LEMMA INT DEFAULT 0;


    INSERT INTO LEMMA VALUES (NULL,VLEMMA);  

    SELECT LAST_INSERT_ID() INTO VID_LEMMA;

    INSERT INTO WORD VALUES (NULL,VWORD, VID_LEMMA);

    SELECT LAST_INSERT_ID() INTO VID_WORD;

END;
CALL PWORD("VBA", "PYTHON", @ID_WORD);
CALL PWORD("PHP", "JAVA", @ID_WORD);
SELECT @ID_WORD</string>
		<string>DROP PROCEDURE IF EXISTS PWIKI;
CREATE PROCEDURE PWIKI (IN VFILE_WIKI TEXT, OUT VID_WIKI INT)   
BEGIN
     INSERT INTO WIKI (ID_WIKI, FILE_WIKI) VALUES (NULL, FILE_WIKI);
     SELECT LAST_INSERT_ID() INTO VID_WIKI;
END;
CALL PWIKI("wikipedia.org", @VID_WIKI);
SELECT @VID_WIKI</string>
		<string>DROP PROCEDURE IF EXISTS PWIKI;
CREATE PROCEDURE PWIKI (IN VFILE_WIKI VARCHAR(2803), OUT VID_WIKI INT)   
BEGIN
     INSERT INTO WIKI (ID_WIKI, FILE_WIKI) VALUES (NULL, FILE_WIKI);
     SELECT LAST_INSERT_ID() INTO VID_WIKI;
END;
CALL PWIKI("wikipedia.org", @VID_WIKI);
SELECT @VID_WIKI</string>
	</array>
	<key>rdbms_type</key>
	<string>mysql</string>
	<key>rdbms_version</key>
	<string>5.7.20</string>
	<key>version</key>
	<integer>1</integer>
</dict>
</plist>
