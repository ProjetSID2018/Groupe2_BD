<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE plist PUBLIC "-//Apple//DTD PLIST 1.0//EN" "http://www.apple.com/DTDs/PropertyList-1.0.dtd">
<plist version="1.0">
<dict>
	<key>ContentFilters</key>
	<dict/>
	<key>auto_connect</key>
	<true/>
	<key>data</key>
	<data>
	1HFpRqoiaiMnwc4au+6XYzuDZ1MJlfikHy1LiI7/MM2oE+1rqFvTcD5upRcvA+T5pV7J
	yzM/SgrlaCbmzggBDzeWXws2UsYwzHuuoqLDulhBRfKFjBx9a1QuhHbPCwtS8UJCNF/i
	aYjiBZSuOjGASDYszkBQGmlvo8cIHgu62Hg6vsSxV6Yyvq+O6QzXWKygZDUWlSdyPUt1
	GwHfcBEV5HxPBAupDt4rkfz3F4C/RheYKo9Dz0+ENZCJEKmq/etilDmRJfAyc9HBXaXs
	X9DyopnkAfhVMO+xc7bsvU1UqMGmDqqd17pFBZEMhgC9Y86DXaRu5EX6yWv9KUlfNnH5
	cEJ3PoWXdbUlmYP4sIeme615TyOTbMoG44VCEQB1Br6BMsOxWmQwk5yc7RQhlVM9wpas
	Epus2gSKtiJdhnHOgrZM+5D+BjmYQNV0bgk12cJ2P/9uE9X3RYj8RKqXCzU5mRFv9j56
	j/d0ivtOf8Ru9ufDRU1TebkzT/2YdtTFGHpy2jfRyBff5IYGfNAYpAnkimIh0h9msVFV
	8JHX4wyDpDEJHYf2/R8txkHEpR91gZazp51LJ0JsLeHE2XThObDyek8Re1tOF/yg1MUI
	TH7Ol5clXhpNJOs/wnDKpVtpsXO6wCPt0ahjrcPaIc/xWA+hSe8ZpYdbn0qg/9RDeDPQ
	xArW5fJyjR5BR85494h+5mlNFrmwqgwU1/Lsw6imH2XMgHSdlWbPOppWWitICe+E8tnb
	3qg+8Q8Q8OIyEYK1u9MOjkZDggzFPPWMVzH46108hHN4jTvW+vvsHqmfxcBPDUgXnGAI
	hg8a9V3uiMLiJeupjdGu/DKR7QycqCS0/wqr+7oDYPdwxcxp25bhU8JqrajB9Ej0/Nd3
	PulFj3iMGYvN1VDdCu2qTtXN48KE2d7EOjw6DXRqcdTWlupzZ9YxtZati3AXJ627Qzvf
	bG450fEgZk3uF59pqgUVH9iEOfcWBHmjcvIOGLQLsUnhoQyuAfzkAT9mzxjpeH1drVn/
	lcnZEyJyaaigLwELNaLDgS+96VfxOk4PD9Bt374A5Y5/uiUXE9Bk147u6749kTQFTKOn
	i4IF8GjZkd2XCMtEJEQE/ZAPY7QZF/ojLFzSwmd2f4umzW5nV3YiDNE2pdRAHOVZq4rr
	dRh0/lGCUrtDNOjCoxmbI4Qerd183tBNo6KpMzhMVI93v0q86QSXOBFl92LmIiY07eNK
	zZKRLYqYQpvLtz+zAZQo9imYvKxzKdR2MjLamghcnzH31xVqWaqNmA/uyIXcw8E1Qw/E
	0IT4J9eivJns6BkkhjQPKjH7aDYHXDZofVCXvkE+x+9WuiMRyFfzy/7h/PKYz97iYOnl
	tD/4PLh77mdQPMv0VjrpnTtTj8tOGLRsHUH9VW3pMsNBnBaWQF0NUzgNfg2qEAjvH4fW
	2lExVmGBHXt4A0Lctrh7buifyyKnczePD7ltny2i9W12V8LwiIj2v4l8KMJQ/1yeew7K
	iUSY16UAuDb6xTu0LutvaXqIzpB8bB3InNxF1bBGmoHUUsJmL98WMFKYaKePZXH1HXHn
	HeGQs74ldIWi5q1ip1WpQyJHIo+0LVP7xLhAYUKDG6qdrm8H8nS7i7UbITsFE/rjYGLB
	QSgTjDScV2Y/CXTAbjvImJw9ub81qRFgbIsY3/5IzflqdKr+3G+7YgQjbLIN9qpjbgVI
	gMGByvgm8qjL+zZhjuUo6KK8+bU66CRojFdQpjGj5rMbPoisd1TZ57f3x3xmdEQTn9ss
	RAW0iAhXDKMLycDB1sZvvNgbKqyAM49BZieeWgsCumSPoZKKP59nPm9fAH4dHm7uGPc1
	amIktblQu5Z8gbIes6lDdXTqi3opoZG32GZy24lBlXHdBSuJlXFUbfODhz9JKWHp9hE8
	7wUsmUdx0pBUbd1A
	</data>
	<key>encrypted</key>
	<true/>
	<key>format</key>
	<string>connection</string>
	<key>queryFavorites</key>
	<array/>
	<key>queryHistory</key>
	<array>
		<string>DROP PROCEDURE IF EXISTS FILTERING_PSYNONYM;
CREATE PROCEDURE FILTERING_PSYNONYM (IN v_word VARCHAR(25), IN v_synonym VARCHAR(25))
	BEGIN

		DECLARE count_id_ INT DEFAULT 0;
		DECLARE vid_synonym INT DEFAULT 0;
		DECLARE vid_word INT DEFAULT 0;

		DECLARE CONTINUE HANDLER FOR NOT FOUND SET vid_synonym = NULL AND vid_word = NULL;
		
		SELECT s.id_synonym INTO vid_synonym
		FROM synonym s
		WHERE s.synonym = v_synonym;

		IF (vid_synonym IS NULL AND v_synonym is not NULL)  THEN
			INSERT INTO synonym (id_synonym, v_synonym) VALUES (NULL, v_synonym);
			SELECT LAST_INSERT_ID() INTO vid_synonym;
		END IF;
			

		
		SELECT w.id_word INTO vid_word
		FROM word w
		WHERE w.word = v_word;

		IF (vid_word IS NOT NULL) THEN 
			INSERT INTO equivalent(id_synonym, id_word) VALUES (v_synonym,v_word);
		ELSE 
			SIGNAL SQLSTATE '23000' SET MESSAGE_TEXT = 'The word is missing in the database';
		END IF;
		
		COMMIT;
	END</string>
		<string>DROP PROCEDURE IF EXISTS FILTERING_PSYNONYM;
CREATE PROCEDURE FILTERING_PSYNONYM (IN v_word VARCHAR(25), IN v_synonym VARCHAR(25))
	BEGIN

		DECLARE count_id_ INT DEFAULT 0;
		DECLARE vid_synonym INT DEFAULT 0;
		DECLARE vid_word INT DEFAULT 0;

		DECLARE CONTINUE HANDLER FOR NOT FOUND SET vid_synonym = NULL;
		DECLARE CONTINUE HANDLER FOR NOT FOUND SET vid_word = NULL;

		SELECT s.id_synonym INTO vid_synonym
		FROM synonym s
		WHERE s.synonym = v_synonym;

		IF (vid_synonym IS NULL AND v_synonym is not NULL)  THEN
			INSERT INTO synonym (id_synonym, v_synonym) VALUES (NULL, v_synonym);
			SELECT LAST_INSERT_ID() INTO vid_synonym;
		END IF;
			

		
		SELECT w.id_word INTO vid_word
		FROM word w
		WHERE w.word = v_word;

		IF (vid_word IS NOT NULL) THEN 
			INSERT INTO equivalent(id_synonym, id_word) VALUES (v_synonym,v_word);
		ELSE 
			SIGNAL SQLSTATE '23000' SET MESSAGE_TEXT = 'The word is missing in the database';
		END IF;
		
		COMMIT;
	END</string>
		<string>DROP PROCEDURE IF EXISTS FILTERING_PSYNONYM;
CREATE PROCEDURE FILTERING_PSYNONYM (IN v_word VARCHAR(25), IN v_synonym VARCHAR(25))
	BEGIN

		DECLARE count_id_ INT DEFAULT 0;
		DECLARE vid_synonym INT DEFAULT 0;
		DECLARE vid_word INT DEFAULT 0;

		DECLARE CONTINUE HANDLER FOR NOT FOUND SET vid_synonym = NULL;

		SELECT s.id_synonym INTO vid_synonym
		FROM synonym s
		WHERE s.synonym = v_synonym;

		IF (vid_synonym IS NULL AND v_synonym is not NULL)  THEN
			INSERT INTO synonym (id_synonym, v_synonym) VALUES (NULL, v_synonym);
			SELECT LAST_INSERT_ID() INTO vid_synonym;
		END IF;
			
		DECLARE CONTINUE HANDLER FOR NOT FOUND SET vid_word = NULL;
		
		SELECT w.id_word INTO vid_word
		FROM word w
		WHERE w.word = v_word;

		IF (vid_word IS NOT NULL) THEN 
			INSERT INTO equivalent(id_synonym, id_word) VALUES (v_synonym,v_word);
		ELSE 
			SIGNAL SQLSTATE '23000' SET MESSAGE_TEXT = 'The word is missing in the database';
		END IF;
		
		COMMIT;
	END</string>
		<string>CALL FILTERING_PARTICLE('2017-01-26','Observateur',@VID_ARTICLE);
CALL SEMANTIC_PARTICLE(2,1,1,0.3,1,1,1,1,1);
#CALL FILTERING_PAUTHOR(2,'Jean', 'Michel');
#CALL FILTERING_PAUTHOR(2,'Bernard', '');</string>
		<string>CALL FILTERING_PARTICLE('2017-01-26','Observateur',@VID_ARTICLE);
CALL SEMANTIC_PARTICLE(2,1,1,0.3,1,1,1,1,1);
CALL FILTERING_PAUTHOR(2,'Jean', 'Michel')</string>
		<string>CALL FILTERING_PARTICLE('2017-01-26','Observateur',@VID_ARTICLE);
CALL SEMANTIC_PARTICLE(1,1,1,1,1,1,1,1,1);
CALL FILTERING_PAUTHOR(2,'Jean', 'Michel')</string>
		<string>CALL FILTERING_PARTICLE('2017-01-26','Observateur',@VID_ARTICLE);
CALL SEMANTIC_PARTICLE(1,1,1,1,1,1,1,1,1);
CALL FILTERING_PAUTHOR(2,'Jean', 'Michel');
CALL FILTERING_PAUTHOR(2,'Bernard', '')</string>
		<string>CALL FILTERING_PARTICLE('2017-01-26','Observateur',@VID_ARTICLE);
CALL SEMANTIC_PARTICLE(1,1,1,1,1,1,1,1,1);
CALL FILTERING_PAUTHOR(1,'Jean', 'Michel')</string>
		<string>CALL SEMANTIC_PARTICLE(1,1,1,1,1,1,1,1,1);
CALL FILTERING_PAUTHOR(1,'Jean', 'Michel')</string>
		<string>CALL SEMANTIC_PARTICLE(1,1,1,1,1,1,1,1,1);
CALL FILTERING_PAUTHOR(2,'Jean', 'Michel')</string>
		<string>CALL SEMANTIC_PARTICLE(1,1,1,1,1,1,1,1,1);
CALL FILTERING_PAUTHOR(1,'Jean', 'Michel');
CALL FILTERING_PAUTHOR(1,'Bernard', '')</string>
		<string>CALL SEMANTIC_PARTICLE(1,1,1,1,1,1,1,1,1);
CALL FILTERING_PAUTHOR(1,'Jean Michel')</string>
		<string>CALL SEMANTIC_PARTICLE(1,1,1,1,1,1,1,1,1);
CALL PAUTHOR(1,'Jean Michel')</string>
		<string>CALL SEMANTIC_PARTICLE(1,1,1,1,1,1,1,2,1)</string>
		<string>CALL SEMANTIC_PARTICLE(1,1,1,1,1,1,1,1,1)</string>
		<string>DROP PROCEDURE IF EXISTS SEMANTIC_PARTICLE;
CREATE PROCEDURE SEMANTIC_PARTICLE(IN v_id_article INT, IN v_rate_positivity FLOAT, IN v_rate_negativity FLOAT,
  IN v_rate_joy FLOAT,  IN v_rate_fear FLOAT,  IN v_rate_sadness FLOAT, IN v_rate_angry FLOAT,
  IN v_rate_surprise FLOAT, IN v_rate_disgust FLOAT)
BEGIN

  DECLARE v_count INT;

  SELECT count(*) INTO v_count
  FROM article
  WHERE id_article = v_id_article;

  IF (v_count = 1) THEN

    UPDATE article
    SET
      rate_positivity = v_rate_positivity,
      rate_negativity= v_rate_negativity,
      rate_joy= v_rate_joy,
      rate_fear= v_rate_fear,
      rate_sadness= v_rate_sadness,
      rate_angry= v_rate_angry,
      rate_surprise= v_rate_surprise,
      rate_disgust= v_rate_disgust
    WHERE id_article = v_id_article;

  END IF;

  COMMIT;
END</string>
		<string>CALL FILTERING_PPOSITION_WORD(1,'Peche','Fruit',True,'Nom_Commun','entite',1)</string>
		<string>CALL FILTERING_PARTICLE('2018-06-12','Figaro',@VID_ARTICLE);
SELECT @VID_ARTICLE</string>
		<string>CALL FILTERING_PARTCICLE('2018-06-12','Figaro',@VID_ARTICLE)</string>
		<string>CALL FILTERING_PARTCICLE('2018-06-12','Figaro','@VID_ARTICLE')</string>
	</array>
	<key>rdbms_type</key>
	<string>mysql</string>
	<key>rdbms_version</key>
	<string>5.7.20</string>
	<key>version</key>
	<integer>1</integer>
</dict>
</plist>
